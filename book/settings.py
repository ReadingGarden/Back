"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
import pymysql
import environ

from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv

# django, mysql 충돌 해결
pymysql.install_as_MySQLdb()

# .env 파일에서 환경 변수 로드
load_dotenv()

# Initialize environment variables
env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# 현재 파일의 위치
current_file = Path(__file__).resolve()
# 현재 파일의 상위 디렉토리
project_root = current_file.parent
# 상위 디렉토리의 이름을 가져옵니다.
project_name = project_root.name

BOOK_IMAGE_DIR = str(BASE_DIR.parent) + '/'+ project_name +'/images/book'
MEMO_IMAGE_DIR = str(BASE_DIR.parent) + '/'+ project_name +'/images/memo'
# MEMO_IMAGE_DIR = str(BASE_DIR.parent) + '/book/images/memo'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')


ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
    '.ap-northeast-2.compute.amazonaws.com'
]

APPEND_SLASH = False


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    # "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "book.urls"

JWT = {
    "JWT_SECRET_KEY": env("HS256_KEY"),
    # "JWT_PRIVATE_KEY": env("RS256_PRIVATE_KEY").replace("\\n", "\n"),
    # "JWT_PUBLIC_KEY": env("RS256_PUBLIC_KEY").replace("\\n", "\n"),
    "JWT_ALGORITHM": "HS256",
    "JWT_ACCESS_EXP_DELTA": timedelta(hours=24),
    "JWT_REFRESH_EXP_DELTA": timedelta(weeks=60),
}

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "book.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# Database with sqlalchemy
SQLALCHEMY_DATABASE_URI = (
    "mysql://"
    + env("DB_USER")
    + ":"
    + env("DB_PASSWORD")
    + "@"
    + env("DB_HOST")
    + ":3306/"
    + env("DB_NAME")
)

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': env("DB_NAME"),
#         'USER': env("DB_USER"),
#         'PASSWORD': env("DB_PASSWORD"),
#         'HOST': env("DB_HOST"),
#         'PORT': '3306',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "ko-kr"

TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_TZ = True

# 이메일 계정
EMAIL_ACCOUNT = env('EMAIL_ACCOUNT')
EMAIL_PASSWORD = env('EMAIL_PASSWORD')
# 알라딘 TTBKEY
ALADIN_TTBKEY = env("ALADIN_TTBKEY")


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# STATIC_URL = "static/"
# 미디어 파일을 저장할 디렉토리 경로
MEDIA_ROOT = os.path.join(BASE_DIR, 'images')
# 미디어 파일에 접근할 URL 경로
MEDIA_URL = '/images/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
